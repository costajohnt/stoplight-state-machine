{"version":3,"sources":["Traffic/Arrow.tsx","Traffic/Light.tsx","Traffic/ThrowErrorButton.tsx","Traffic/index.tsx","Traffic/Store/Helpers.ts","Traffic/Store/index.ts","Traffic/Store/Types.ts","Traffic/Store/Reactions.tsx","Traffic/Store/ReactionComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["observer","_ref","arrow","React","className","xmlns","xmlnsXlink","viewBox","version","style","d","light","red","yellow","green","store","display","paddingLeft","type","onClick","systemError","paddingRight","Arrow","state","Light","ThrowErrorButton","assertNever","x","Error","concat","transitionToWarning","Task","succeed","assign","readVarT","andThen","s","duration","reject","resolve","num","parseInt","isNaN","fork","setTimeout","warning","setTimerTransitionProhibiting","transitionToProhibiting","prohibiting","transitionToPriorityLeft","priorityLeft","transitionToWarningLeft","warningLeft","transitionToPriorityStraight","priorityStraight","Store","_class","_createClass","_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","kind","color","status","action","_this","_this2","_this3","_this4","_this5","_this6","Reactions","_ReactionComponent","_inherits","_super","_createSuper","_len","arguments","length","args","Array","_key","call","apply","tester","props","effect","console","log","warn","_React$Component","ReactionComponent","comparer","default","running","key","get","fireImmediately","this","delay","debounceDelay","equals","value","run","reaction","options","App","Traffic","Boolean","window","location","hostname","match","ReactDOM","createRoot","document","getElementById","render","createElement","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c94a12d5.chunk.js","sourcesContent":["import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { ArrowUnion } from \"./Store/Types\";\n\ninterface Props {\n  arrow: ArrowUnion;\n}\n\nconst path =\n  \"M487.267,225.981c0-17.365-13.999-31.518-31.518-31.518H194.501L305.35,83.615c12.24-12.24,12.24-32.207,0-44.676L275.592,9.18c-12.24-12.24-32.207-12.24-44.676,0L15.568,224.527c-6.12,6.12-9.256,14.153-9.256,22.262c0,8.032,3.136,16.142,9.256,22.262l215.348,215.348c12.24,12.239,32.207,12.239,44.676,0l29.758-29.759c12.24-12.24,12.24-32.207,0-44.676L194.501,299.498h261.094c17.366,0,31.519-14.153,31.519-31.519L487.267,225.981z\";\n\nconst Arrow: React.FC<Props> = ({ arrow }) => (\n  <div className=\"turnSignalBackground\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"-50 0 600 600\"\n      version=\"1.1\"\n    >\n      <g>\n        <path className={arrow.style} d={path} />\n      </g>\n    </svg>\n  </div>\n);\n\nexport default observer(Arrow);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { LightUnion } from \"./Store/Types\";\n\nexport interface Props {\n  light: LightUnion;\n}\nconst Light: React.FC<Props> = ({ light }) => (\n  <div className=\"container\">\n    <div className={light.red.style} />\n    <div className={light.yellow.style} />\n    <div className={light.green.style} />\n  </div>\n);\n\nexport default observer(Light);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport Store from \"./Store\";\nimport \"./style.css\";\n\nexport interface Props {\n  store: Store;\n}\nconst ThrowErrorButton: React.FC<Props> = ({ store }) => (\n  <div style={{ display: \"inline-flex\", paddingLeft: \"20%\" }}>\n    <button type=\"button\" onClick={store.systemError}>\n      Throw Wrench\n    </button>\n  </div>\n);\n\nexport default observer(ThrowErrorButton);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport Arrow from \"./Arrow\";\nimport Light from \"./Light\";\nimport Store from \"./Store\";\nimport ThrowErrorButton from \"./ThrowErrorButton\";\n\nexport interface Props {\n  store: Store;\n}\nconst Traffic: React.FC<Props> = ({ store }) => (\n  <div style={{ display: \"block\" }}>\n    <div style={{ display: \"flex\", paddingRight: \"20%\" }}>\n      <Arrow arrow={store.state.arrow} />\n      <Light light={store.state.light} />\n    </div>\n    <ThrowErrorButton store={store} />\n  </div>\n);\n\nexport default observer(Traffic);\n","import { readVarT } from \"@execonline-inc/environment\";\nimport Task from \"taskarian\";\nimport Store from \".\";\nimport { ConfigError } from \"./Types\";\n\nexport const assertNever = (x: never) => {\n  throw new Error(`Unexpected object: ${x}`);\n};\n\nconst parseIntT = (s: string): Task<string, number> =>\n  new Task((reject, resolve) => {\n    const num = parseInt(s, 10);\n    isNaN(num) ? reject(\"not a number\") : resolve(num);\n    return () => {};\n  });\n\nconst setTimerTransitionProhibiting = (store: Store) => (duration: number) =>\n  setTimeout(() => {\n    store.warning();\n  }, duration);\n\nexport const transitionToWarning = (store: Store) =>\n  Task.succeed<ConfigError, {}>({})\n    .assign(\"duration\", readVarT(\"REACT_APP_GREEN_TO_YELLOW_DURATION\"))\n    .andThen(({ duration }) => parseIntT(duration))\n    .fork(store.systemError, setTimerTransitionProhibiting(store));\n\nexport const transitionToProhibiting = (store: Store) =>\n  setTimeout(() => {\n    store.prohibiting();\n  }, 1200);\n\nexport const transitionToPriorityLeft = (store: Store) =>\n  setTimeout(() => {\n    store.priorityLeft();\n  }, 3000);\n\nexport const transitionToWarningLeft = (store: Store) =>\n  setTimeout(() => {\n    store.warningLeft();\n  }, 1000);\n\nexport const transitionToPriorityStraight = (store: Store) =>\n  setTimeout(() => {\n    store.priorityStraight();\n  }, 1000);\n","import { action, observable } from \"mobx\";\nimport { assertNever } from \"./Helpers\";\nimport {\n  priorityLeft,\n  priorityStraight,\n  prohibiting,\n  State,\n  systemError,\n  warning,\n  warningLeft,\n} from \"./Types\";\n\nclass Store {\n  @observable\n  state: State = prohibiting();\n\n  @action\n  priorityStraight = (): void => {\n    switch (this.state.kind) {\n      case \"priority-straight\":\n      case \"warning\":\n      case \"priority-left\":\n      case \"prohibiting\":\n        break;\n      case \"warning-left\":\n      case \"system-error\":\n        this.state = priorityStraight();\n        break;\n      default:\n        assertNever(this.state);\n    }\n  };\n\n  @action\n  warning = (): void => {\n    switch (this.state.kind) {\n      case \"priority-straight\":\n        this.state = warning();\n        break;\n      case \"system-error\":\n      case \"warning\":\n      case \"prohibiting\":\n      case \"priority-left\":\n      case \"warning-left\":\n        break;\n      default:\n        assertNever(this.state);\n    }\n  };\n\n  @action\n  prohibiting = (): void => {\n    switch (this.state.kind) {\n      case \"priority-straight\":\n      case \"prohibiting\":\n      case \"priority-left\":\n      case \"warning-left\":\n        break;\n      case \"warning\":\n      case \"system-error\":\n        this.state = prohibiting();\n        break;\n      default:\n        assertNever(this.state);\n    }\n  };\n\n  @action\n  priorityLeft = (): void => {\n    switch (this.state.kind) {\n      case \"priority-straight\":\n        break;\n      case \"prohibiting\":\n        this.state = priorityLeft();\n        break;\n      case \"priority-left\":\n      case \"warning-left\":\n      case \"warning\":\n      case \"system-error\":\n        break;\n      default:\n        assertNever(this.state);\n    }\n  };\n\n  @action\n  warningLeft = (): void => {\n    switch (this.state.kind) {\n      case \"priority-straight\":\n      case \"prohibiting\":\n        break;\n      case \"priority-left\":\n        this.state = warningLeft();\n        break;\n      case \"warning-left\":\n      case \"warning\":\n      case \"system-error\":\n        break;\n      default:\n        assertNever(this.state);\n    }\n  };\n\n  @action\n  systemError = (): void => {\n    this.state = systemError();\n  };\n}\n\nexport default Store;\n","import { MissingVarError } from \"@execonline-inc/environment\";\n\ninterface Flashing {\n  status: \"flashing\";\n}\n\nexport type LightUnion = GreenLight | YellowLight | RedLight | FlashingRedLight;\n\nexport type ArrowUnion =\n  | FlashingYellow\n  | ArrowYellow\n  | ArrowRed\n  | ArrowOff\n  | ArrowGreen;\n\ninterface FlashingYellow extends Flashing {\n  color: \"yellow\";\n  style: \"turnSignal\";\n}\n\ninterface FlashingRed extends Flashing {\n  style: \"blinker\";\n}\n\ninterface Off {\n  status: \"off\";\n}\ninterface ArrowOff extends Off {\n  style: \"black\";\n}\n\ninterface LightOff extends Off {\n  style: \"lightBase\";\n}\n\ninterface On {\n  status: \"on\";\n}\n\ninterface Green extends On {\n  style: \"lightBase green\";\n}\n\ninterface Yellow extends On {\n  style: \"lightBase yellow\";\n}\n\ninterface Red extends On {\n  style: \"lightBase red\";\n}\n\ninterface ArrowGreen {\n  color: \"green\";\n  status: \"on\";\n  style: \"green\";\n}\n\ninterface ArrowYellow {\n  color: \"yellow\";\n  status: \"on\";\n  style: \"yellow\";\n}\n\ninterface ArrowRed {\n  color: \"red\";\n  status: \"on\";\n  style: \"red\";\n}\n\ninterface GreenLight {\n  red: LightOff;\n  yellow: LightOff;\n  green: Green;\n}\n\ninterface YellowLight {\n  red: LightOff;\n  yellow: Yellow;\n  green: LightOff;\n}\n\ninterface RedLight {\n  red: Red;\n  yellow: LightOff;\n  green: LightOff;\n}\n\ninterface FlashingRedLight {\n  red: FlashingRed;\n  yellow: LightOff;\n  green: LightOff;\n}\ninterface PriorityStraight {\n  kind: \"priority-straight\";\n  arrow: FlashingYellow;\n  light: GreenLight;\n}\ninterface Warning {\n  kind: \"warning\";\n  arrow: ArrowYellow;\n  light: YellowLight;\n}\n\ninterface Prohibiting {\n  kind: \"prohibiting\";\n  arrow: ArrowRed;\n  light: RedLight;\n}\ntype SystemError = {\n  kind: \"system-error\";\n  arrow: ArrowOff;\n  light: FlashingRedLight;\n};\ntype PriorityLeft = {\n  kind: \"priority-left\";\n  arrow: ArrowGreen;\n  light: RedLight;\n};\ntype WarningLeft = {\n  kind: \"warning-left\";\n  arrow: ArrowYellow;\n  light: RedLight;\n};\n\nexport type ConfigError = MissingVarError | string;\n\nexport type State =\n  | PriorityStraight\n  | Warning\n  | Prohibiting\n  | SystemError\n  | PriorityLeft\n  | WarningLeft;\n\nexport const priorityStraight = (): PriorityStraight => ({\n  kind: \"priority-straight\",\n  arrow: {\n    color: \"yellow\",\n    status: \"flashing\",\n    style: \"turnSignal\",\n  },\n  light: {\n    red: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    yellow: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    green: {\n      status: \"on\",\n      style: \"lightBase green\",\n    },\n  },\n});\nexport const warning = (): Warning => ({\n  kind: \"warning\",\n  arrow: {\n    color: \"yellow\",\n    status: \"on\",\n    style: \"yellow\",\n  },\n  light: {\n    red: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    yellow: {\n      status: \"on\",\n      style: \"lightBase yellow\",\n    },\n    green: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n  },\n});\nexport const prohibiting = (): Prohibiting => ({\n  kind: \"prohibiting\",\n  arrow: {\n    color: \"red\",\n    status: \"on\",\n    style: \"red\",\n  },\n  light: {\n    red: {\n      status: \"on\",\n      style: \"lightBase red\",\n    },\n    yellow: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    green: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n  },\n});\n\nexport const priorityLeft = (): PriorityLeft => ({\n  kind: \"priority-left\",\n  arrow: {\n    color: \"green\",\n    status: \"on\",\n    style: \"green\",\n  },\n  light: {\n    red: {\n      status: \"on\",\n      style: \"lightBase red\",\n    },\n    yellow: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    green: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n  },\n});\n\nexport const systemError = (): SystemError => ({\n  kind: \"system-error\",\n  arrow: {\n    status: \"off\",\n    style: \"black\",\n  },\n  light: {\n    red: {\n      status: \"flashing\",\n      style: \"blinker\",\n    },\n    yellow: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    green: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n  },\n});\n\nexport const warningLeft = (): WarningLeft => ({\n  kind: \"warning-left\",\n  arrow: {\n    color: \"yellow\",\n    status: \"on\",\n    style: \"yellow\",\n  },\n  light: {\n    red: {\n      status: \"on\",\n      style: \"lightBase red\",\n    },\n    yellow: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n    green: {\n      status: \"off\",\n      style: \"lightBase\",\n    },\n  },\n});\n","import { observer } from \"mobx-react\";\nimport Store from \".\";\nimport {\n  assertNever,\n  transitionToWarning,\n  transitionToPriorityStraight,\n  transitionToWarningLeft,\n  transitionToPriorityLeft,\n  transitionToProhibiting,\n} from \"./Helpers\";\nimport ReactionComponent, { RCProps } from \"./ReactionComponent\";\nimport { State } from \"./Types\";\n\ninterface Props extends RCProps<Store> {\n  store: Store;\n}\n\nclass Reactions extends ReactionComponent<Store, State, Props> {\n  tester = () => this.props.store.state;\n  effect = (state: State) => {\n    const { store } = this.props;\n    console.log(state.kind);\n    switch (state.kind) {\n      case \"priority-straight\":\n        transitionToWarning(store);\n        break;\n      case \"warning\":\n        transitionToProhibiting(store);\n        break;\n      case \"prohibiting\":\n        transitionToPriorityLeft(store);\n        break;\n      case \"priority-left\":\n        transitionToWarningLeft(store);\n        break;\n      case \"warning-left\":\n        transitionToPriorityStraight(store);\n        break;\n      case \"system-error\":\n        console.warn(\"Error state has been entered, please resolve.\");\n        break;\n      default:\n        assertNever(state);\n    }\n  };\n}\n\nexport default observer(Reactions);\n","import {\n  comparer,\n  IReactionDisposer,\n  IReactionOptions,\n  IReactionPublic,\n  reaction,\n} from \"mobx\";\nimport * as React from \"react\";\n\nexport interface ReactState {}\n\nexport interface RCProps<Store> {\n  store: Store;\n  fireImmediately?: boolean;\n  debounceDelay?: number;\n}\n\nexport type ReactionComparer<ObservedState> = (\n  prev: ObservedState,\n  current: ObservedState\n) => boolean;\n\nabstract class ReactionComponent<\n  Store,\n  ObservedState,\n  P extends RCProps<Store>\n> extends React.Component<P, ReactState> {\n  protected abstract tester: (r?: IReactionPublic) => ObservedState;\n  protected abstract effect: (arg: ObservedState, r?: IReactionPublic) => void;\n\n  /**\n   * Provides logic that determines if the watched value has changed. The default behavior\n   * is to use mobx's default compare, which is a slighty enhanced identity compare.\n   */\n  protected comparer: ReactionComparer<ObservedState> = comparer.default;\n\n  private running?: IReactionDisposer;\n\n  private get options(): IReactionOptions | undefined {\n    return {\n      fireImmediately: this.props.fireImmediately,\n      delay: this.props.debounceDelay,\n      equals: this.comparer,\n    };\n  }\n\n  constructor(props: P) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.running = this.run();\n  }\n\n  componentWillUnmount() {\n    if (this.running) {\n      this.running();\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n\n  private run(): IReactionDisposer {\n    return reaction(this.tester, this.effect, this.options);\n  }\n}\n\nexport default ReactionComponent;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport \"./App.css\";\nimport Traffic from \"./Traffic\";\nimport Store from \"./Traffic/Store\";\nimport Reactions from \"./Traffic/Store/Reactions\";\n\ninterface Props {}\n\nclass App extends React.Component<Props> {\n  store = new Store();\n\n  render() {\n    return (\n      <>\n        <Traffic store={this.store} />\n        <Reactions store={this.store} fireImmediately={true} />\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string | URL, config: { onUpdate: (arg0: ServiceWorkerRegistration) => void; onSuccess: (arg0: ServiceWorkerRegistration) => void; }) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string | URL, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(<App />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}